#! /usr/bin/env bash


# set -euo pipefail

exit_hook() {
  :
}


the_holy_word_of_the_day() {
  lynx -dump http://www.bibel.no/Nettbibel/Service/BibelOrd.aspx | \
      sed -e '/[ ]*Dagens bibelord/d' \
          -e 's#\[1\]\(.*\)# <h2>Word of the Day from \1</h2>\n    <p>#' \
          -e '/[ ]*Kilde:/d' \
          -e '/BUTTON Input/d' \
          -e '/[ ]*References/d' \
          -e '/www.bibel.no/d'
  echo "    </p>"

}

news() {
  local news=$(curl -s http://www.nrk.no/nyheter/siste.rss | \
                    grep '<item>' | \
                    head -n 10)
  cat <<EOF
    <h2>News</h2>
    <ul>
EOF

  echo "$news" | sed -n \ 's#.*<title>\(.*\)</title>.*<description>\(.*\)</description>.*<link>\(.*\)</link>.*#      <li><a href="\3">\1</a>: \2 </li>#p'
  echo "    </ul>"
}

print_header() {
  local title="News for Skybert @ $(date)"
  cat <<EOF
<!DOCTYPE html PUBLIC
"-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>${title}</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet"
          type="text/css"
          href="http://skybert.net/theme/styles/skybert.css"
    />
    <style type="text/css">
      .invisible { display: none; }
      a { color: black; }
    </style>
  </head>
  <body>
    <h1>${title}</h1>
EOF
}

print_footer() {
  cat <<EOF
  </body>
</html>
EOF
}


## $1 :: twitter user
## $2 :: max tweets
get_twitter_list() {
  local twitter_user=$1
  local max_tweets=$2

  local tweets=$(lynx -width 500 -dump https://twitter.com/${twitter_user})
  local i=0
  echo "    <p><a href=\"https://twitter.com/${twitter_user}\">@${twitter_user}</a></p>"
  echo "    <ul>"
  echo "$tweets" | sed -r -n -f $(dirname $0)/lynx-ascii-to-html.sed | \
      while read line; do

        if [[ -z "$line" ]]; then
            continue
        fi

        i=$(( i + 1 ))
        echo "      <li>"
        echo "        "$line
        echo "      </li>"

        if [[ $i -eq $max_tweets ]]; then
            break
        fi
      done
  echo "    </ul>"
}

unix_news() {
  cat <<EOF
    <h2>Coding news</h2>
EOF

  get_twitter_list nixcraft 5
  get_twitter_list mogsie 2
  get_twitter_list RealPython 3
  get_twitter_list NRKbeta 2
  get_twitter_list tlberglund 3
}

international_news() {
  echo "    <h2>Politics</h2>"
  get_twitter_list Ed_Husain 4
  get_twitter_list ingedhanssen 2
}

music() {
  echo "    <h2>Music</h2>"
  get_twitter_list sspu 2
}

todays_comics() {
  local dilbert=$(
    curl -s  http://dilbert.com | \
      sed -r -n 's#.*img-responsive img-comic.*src="([^"]*)".*#\1#p' | \
      head -1)
  local xkcd=$(curl -s http://xkcd.com/ | sed -n 's#Image URL.*: ##p')
  local commitstrip=$(
    curl -s  https://www.commitstrip.com/en/feed/ | \
      xmllint  --format - | \
      sed -n  -r  's#.*<img src="([^"]*)".*#\1#p' | \
      head -1)

  cat <<EOF
    <h2>Dilbert</h2>
    <div>
      <img src="${dilbert}" alt="dilbert" class="centered"/>
    </div>
    <h2>xkcd</h2>
    <div>
      <img src="${xkcd}" alt="xkcd" class="centered"/>
    </div>
    <h2>CommitStrip</h2>
    <div>
      <img src="${commitstrip}" alt="commitstrip" class="centered"/>
    </div>
EOF
}

daily_pictures() {
  local url=http://photography.nationalgeographic.com/photography/photo-of-the-day/
  local img=$(curl -s $url | egrep '<img .*images.national.*' | head -2 | tail -1)
  local caption=$(echo "$img" | sed 's#.*alt="\([^"]*\)".*#\1#')
  cat <<EOF
    <h2>Daily pictures</h2>
    <p>
      <a href="${url}">
        <img
          $(echo "$img" | sed 's#.*src="\([^"]*\)".*#src="http:\1"#')
          alt="${caption}"
        />
      </a>
      <br/>
      ${caption}
    </p>
EOF

  local content=$(curl -s http://www.telegraph.co.uk/news/picturegalleries/picturesoftheday/ | \
                       egrep 'theweekinpictures.*<img' | \
                       sed -e 's#href="/news#href="http://telegraph.co.uk/news#' -e 's#^[ ]*##'
        )
  caption=$(echo "${content}" | sed -n 's#.*alt="\([^"]*\)".*#\1#p')


  cat <<EOF
    <p>
      ${content}</a>
      <br/>
      ${caption}
    </p>

EOF

}

weather_report() {
  local url=http://www.yr.no/place/Norway/Oslo/Oslo/St._Hanshaugen
  local report=$(curl -s ${url}/varsel.rss | \
                      grep -A 4 '<item>' | head -4 | tail -3)

  local img_url=$(echo "$report" | sed -n 's#.*enclosure url="\([^"]*\)".*#\1#p')
  local description=$(echo "$report" | \
                           sed -n 's#<description>\(.*\)</description>#\1#p' | \
                           sed 's#^[ ]*##')
  cat <<EOF
    <p>
      <a href="${url}">
        <img style="float: left;" src="${img_url}" alt="weather image"/>
      </a>
      ${description}
    </p>
EOF

}

nok_vs_twd() {
  cat <<EOF
    <h2>NOK vs TWD</h2>
    <p>
      <img src="https://img.readitlater.com/i/themoneyconverter.com/exchange-rate-chart/NOK/NOK-TWD/RS/w896.gif"
        alt="NOK vs TWD"/>
    </p>
EOF
}

training() {
  cat <<EOF
    <h2>My latest moves</h2>
    <pre>
$($HOME/src/my-little-friends/bash/my-moves-count 604422)
    </pre>
EOF
}

main() {
  trap exit_hook EXIT

  print_header
  weather_report
  news
  # international_news
  # unix_news
  the_holy_word_of_the_day
  daily_pictures
  todays_comics
  nok_vs_twd
  training
  print_footer
}

main
